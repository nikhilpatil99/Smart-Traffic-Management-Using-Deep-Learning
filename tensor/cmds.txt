# Create train data:
python xml_to_csv.py -i D:\Proto\workspace\training_demo\images\training_set\Train -o D:\Proto\workspace\training_demo\annotations\train_labels.csv

# Create test data:
python xml_to_csv.py -i D:\Proto\workspace\training_demo\images\training_set\Test -o D:\Proto\workspace\training_demo\annotations\test_labels.csv

# Create train data:
python generate_tfrecord.py --csv_input=D:\Proto\workspace\training_demo\annotations\train_labels.csv --img_path=D:\Proto\workspace\training_demo\images\training_set\Train --output_path=D:\Proto\workspace\training_demo\annotations\train.record

# Create test data:
python generate_tfrecord.py --csv_input=D:\Proto\workspace\training_demo\annotations\test_labels.csv --img_path=D:\Proto\workspace\training_demo\images\training_set\Test --output_path=D:\Proto\workspace\training_demo\annotations\test.record

python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/faster_rcnn_inception_v2_coco.config

python export_inference_graph.py --input_type image_tensor --pipeline_config_path training/faster_rcnn_inception_v2_coco.config --trained_checkpoint_prefix training/model.ckpt-200 --output_directory trained-inference-graphs/output_inference_graph_v1.pb

